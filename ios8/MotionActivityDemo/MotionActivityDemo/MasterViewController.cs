// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using System.Collections.Generic;
using CoreFoundation;
using System.Threading.Tasks;

namespace MotionActivityDemo {
	public partial class MasterViewController : UITableViewController {
		ActivityDataManager dataManager;
		List<MotionActivityQuery> motionActivityQueries;

#pragma warning disable 414
		NSObject observer;
#pragma warning disable 414

		public MasterViewController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad ()
		{
			if (motionActivityQueries == null)
				motionActivityQueries = new List<MotionActivityQuery> ();

			observer = NSNotificationCenter.DefaultCenter.AddObserver (UIApplication.WillEnterForegroundNotification, async (notification) => { await refreshDays (); });
		}

		public override async void ViewWillAppear (bool animated)
		{
			await refreshDays ();
		}

		async Task refreshDays ()
		{
			if (dataManager == null)
				dataManager = new ActivityDataManager ();

			if (ActivityDataManager.CheckAvailability ()) {
				var authorized = await dataManager.CheckAuthorizationAsync ();
				DispatchQueue.MainQueue.DispatchAsync (() => {
					if (authorized) {
						NSDate date = NSDate.Now;
						motionActivityQueries.Clear ();
						for (int i = 0; i < 7; ++i) {
							var query = MotionActivityQuery.FromDate (date, -i);
							motionActivityQueries.Add (query);
							TableView.ReloadData ();
						}
					} else {
						new UIAlertView ("M7 not authorized", "Please enable Motion Activity for this application", null, "Cancel", null).Show ();
					}
				});
			} else
				new UIAlertView ("M7 not available", "No activity or step counting is available", null, "Cancel", null).Show ();
		}

		public override nint NumberOfSections (UITableView tableView)
		{
			return 1;
		}

		public override nint RowsInSection (UITableView tableview, nint section)
		{
			return motionActivityQueries.Count;
		}

		public override UITableViewCell GetCell (UITableView tableView, NSIndexPath indexPath)
		{
			UITableViewCell cell = tableView.DequeueReusableCell ((NSString) "Cell", indexPath);

			MotionActivityQuery query = motionActivityQueries [indexPath.Row];
			cell.TextLabel.Text = query.ShortDescription;
			return cell;
		}

		public override bool CanEditRow (UITableView tableView, NSIndexPath indexPath)
		{
			return false;
		}

		public override async void PrepareForSegue (UIStoryboardSegue segue, NSObject sender)
		{
			if (segue.Identifier == "showDetail") {
				var indexPath = TableView.IndexPathForSelectedRow;
				MotionActivityQuery query = motionActivityQueries [indexPath.Row];
				await (segue.DestinationViewController as DetailViewController).SetDetailItem (query);
			}
		}
	}
}
